name: .NET CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🛠 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: 🔄 Restore dependencies
        run: dotnet restore

      - name: 🏗 Build main project
        run: dotnet build unit_testing.csproj --no-restore --configuration Release

      - name: 🏗 Build test project
        run: dotnet build unit_testing.Tests/unit_testing.Tests.csproj --no-restore --configuration Release

      - name: ✅ Run tests with coverage and settings
        run: |
          dotnet test unit_testing.Tests/unit_testing.Tests.csproj \
            --no-build \
            --configuration Release \
            --settings .runsettings \
            --logger "trx;LogFileName=test-results.trx" \
            --collect:"XPlat Code Coverage"

      - name: 🗂 Upload raw test results (.trx and coverage)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: raw-test-results
          path: |
            TestResults/
            **/coverage.cobertura.xml

      - name: 📊 Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: 📈 Generate HTML coverage report
        run: |
          reportgenerator \
            -reports:**/coverage.cobertura.xml \
            -targetdir:TestResults/CoverageReport \
            -reporttypes:Html

      - name: 📤 Upload HTML coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-code-coverage
          path: TestResults/CoverageReport/
